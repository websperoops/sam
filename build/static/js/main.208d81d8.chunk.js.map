{"version":3,"sources":["pages/index.js","store/reducers/auth.js","store/reducers/user.js","store/reducers/events.js","store/reducers/notification.js","store/reducers/visitedUser.js","store/reducers/dashboard.js","store/reducers/index.js","store/index.js","App.js","reportWebVitals.js","index.js","store/services/index.js","store/requests/index.js","store/constants/index.js","store/actions/auth.js"],"names":["PublicRoute","lazy","PrivateRoute","Register","Login","NotFound","Dashboard","Event","Eventform","Eventview","Openhouseattendees","Openhouseform","User","Barcode","Pages","routes","id","path","component","dispatch","useDispatch","useEffect","userData","getUser","email","checkToken","fallback","Box","sx","display","justifyContent","alignItems","height","CircularProgress","exact","element","map","ele","idx","initialState","loading","isAuth","user","error","counts","authReducer","state","action","type","payload","FETCH_USER","LOGIN_SUCCESS","LOGIN_FAIL","TOKEN_FAIL","TOKEN_SUCCESS","LOGOUT_SUCCESS","LOGOUT_FAIL","COUNT_SUCCESS","COUNT_FAIL","users","creatingUser","usersDomain","fetchUserDomains","userDomainsById","userReducer","FETCH_USERS","USERS_SUCCESS","USERS_FAIL","USER_FAIL","CREATING_USER","CREATE_USER","GET_USERS_DOMAIN_SUCCESS","USER_DOMAINS_ACCESS_SUCCESS","FETCH_USER_DOMAINS","GET_USER_DOMAINS_BY_ID_SUCCESS","CLEAR_USER_DOMAINS_BY_ID","savingEvent","all","event","events","imgURI","imageLoading","deletingEvent","eventReducer","DELETING_EVENT","FETCH_EVENTS","SAVING_EVENT","EVENTS_SUCCESS","UPLOAD_IMAGE_SUCCESS","EVENT_SUCCESS","EVENTS_FAIL","EVENT_FAIL","notification","message","description","notificationReducer","SHOW_NOTIFICATION_SUCCESS","savingVisitedUser","visitedUser","visitedUsers","deletingVisitedUser","visitedUserReducer","DELETING_VISITEDUSER","FETCH_VISITEDUSER","SAVING_VISITEDUSER","VISITEDUSERS_SUCCESS","visitedUserEvent","CREATE_VISITEDUSER_SUCCESS","CREATE_VISITEDUSER_FAIL","VISITEDUSER_SUCCESS","VISITEDUSERS_FAIL","VISITEDUSER_FAIL","dashboard","dashboardReducer","FETCH_DASHBOARD_SUCCESS","FETCH_DASHBOARD_FAIL","CHANGE_DASHBOARD_STATE","combineReducers","middleware","thunk","store","createStore","reducers","composeWithDevTools","applyMiddleware","theme","createTheme","palette","primary","main","secondary","App","ThemeProvider","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","document","getElementById","setToken","token","cookie","save","setUser","getToken","load","removeToken","remove","removeUser","toster","status","Swal","mixin","toast","position","showConfirmButton","timer","timerProgressBar","didOpen","addEventListener","stopTimer","resumeTimer","fire","icon","title","axios","interceptors","response","use","data","Promise","reject","apiRequest","method","url","headers","process","GET","POST","PATCH","DELETE","CHANGE_PASSWORD_SUCCESS","CHANGE_PASSWORD_FAIL","login","a","res","result","logout","err"],"mappings":"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","file":"static/js/main.208d81d8.chunk.js","sourcesContent":["import React, { lazy, Suspense, useEffect } from \"react\";\nimport { useDispatch } from \"react-redux\";\nimport { BrowserRouter as Router, Routes, Route } from \"react-router-dom\";\nimport {\n  CircularProgress,\n  Box,\n} from \"@mui/material\";\nimport { checkToken } from '../store/actions/auth'\nimport { getUser } from \"../store/services\";\n\nconst PublicRoute = lazy(() => import(\"./PublicRoute\"));\nconst PrivateRoute = lazy(() => import(\"./PrivateRoute\"));\nconst Register = lazy(() => import(\"./Register\"));\nconst Login = lazy(() => import(\"./Login\"));\nconst NotFound = lazy(() => import(\"./NotFound\"));\nconst Dashboard = lazy(() => import(\"./Dashboard\"));\nconst Event = lazy(() => import(\"./Event\"));\nconst Eventform = lazy(() => import(\"./Eventform\"));\nconst Eventview = lazy(() => import(\"./Eventview\"));\nconst Openhouseattendees = lazy(() => import(\"./Openhouseattendees\"));\nconst Openhouseform = lazy(() => import(\"./Openhouseform\"));\nconst User = lazy(() => import(\"./User\"));\nconst Barcode = lazy(() => import(\"../Component/Barcode\"));\n\n\nconst getRoutes = () => {\n  const routes = [\n    {\n      id: 1,\n      path: \"/\",\n      component: <Dashboard />,\n    },\n    {\n      id: 2,\n      path: \"/event\",\n      component: <Event />,\n    },\n    {\n      id: 3,\n      path: \"/eventform\",\n      component: <Eventform />,\n    },\n    {\n      id: 4,\n      path: \"/eventview/:id\",\n      component: <Eventview />,\n    },\n    {\n      id: 5,\n      path: \"/openhouseattendees\",\n      component: <Openhouseattendees />,\n    },\n    {\n      id: 6,\n      path: \"/openhouseform:event_id\",\n      component: <Openhouseform />,\n    },\n    {\n      id: 7,\n      path: \"/user\",\n      component: <User />,\n    },\n  ];\n  return routes;\n};\n\nconst Pages = () => {\n  const routes = getRoutes();\n  const dispatch = useDispatch();\n\n  useEffect(() => {\n    const userData = getUser();\n    if (userData && userData.email) {\n      dispatch(checkToken());\n    }\n  });\n\n  return (\n    <Suspense fallback={<Box sx={{ display: \"flex\", justifyContent: 'center', alignItems: 'center', height: \"100vh\" }}>\n      <CircularProgress />\n    </Box>}>\n      <Router>\n        <Routes>\n          <Route\n            exact\n            path=\"/login\"\n            element={\n              <PublicRoute>\n                <Login />\n              </PublicRoute>\n            }\n          />\n          <Route\n            exact\n            path=\"/register\"\n            element={\n              <PublicRoute>\n                <Register />\n              </PublicRoute>\n            }\n          />\n          <Route\n            exact\n            path=\"/eventview/:id\"\n            element={\n                <Eventview />\n            }\n          />\n          <Route\n            exact\n            path=\"/barcode/:id\"\n            element={\n                <Barcode />\n            }\n          />\n          {/* PrivateRoute */}\n          {routes &&\n            routes.map((ele, idx) => (\n              <Route\n                exact\n                key={idx}\n                path={ele.path}\n                element={<PrivateRoute>{ele.component}</PrivateRoute>}\n              ></Route>\n            ))}\n          <Route\n            path=\"*\"\n            element={\n              <PublicRoute>\n                <NotFound />\n              </PublicRoute>\n            }\n          />\n        </Routes>\n      </Router>\n    </Suspense>\n  );\n};\n\nexport default Pages;\n","import {\n  FETCH_USER,\n  LOGIN_SUCCESS,\n  LOGIN_FAIL,\n  LOGOUT_SUCCESS,\n  LOGOUT_FAIL,\n  COUNT_SUCCESS,\n  COUNT_FAIL,\n  TOKEN_FAIL,\n  TOKEN_SUCCESS\n} from \"../constants\";\n\nconst initialState = {\n  loading: false,\n  isAuth: false,\n  user: null,\n  error: null,\n  counts: {},\n};\n\nconst authReducer = (state = initialState, action = {}) => {\n  const { type, payload } = action;\n\n  switch (type) {\n    case FETCH_USER:\n      return {\n        ...state,\n        loading: true,\n      };\n\n    case LOGIN_SUCCESS:\n      return {\n        ...state,\n        loading: false,\n        isAuth: true,\n        user: payload\n      };\n\n    case LOGIN_FAIL:\n      return {\n        ...state,\n        loading: false,\n        isAuth: false,\n        error: payload,\n      };\n\n    case TOKEN_FAIL:\n      return {\n        ...state,\n        isAuth:false\n      };\n\n    case TOKEN_SUCCESS:\n      return {\n        ...state,\n        isAuth: true\n      };\n\n    case LOGOUT_SUCCESS:\n      return {\n        ...state,\n        isAuth: false,\n      };\n\n    case LOGOUT_FAIL:\n      return {\n        ...state,\n        error: payload,\n      };\n\n    case COUNT_SUCCESS:\n      return {\n        ...state,\n        counts: payload,\n      };\n\n    case COUNT_FAIL:\n      return {\n        ...state,\n        counts: null,\n      };\n\n    default:\n      return state;\n  }\n};\n\nexport default authReducer;\n","import {\n  FETCH_USERS,\n  USERS_SUCCESS,\n  USERS_FAIL,\n  CREATING_USER,\n  CREATE_USER,\n  USER_FAIL,\n  GET_USERS_DOMAIN_SUCCESS,\n  FETCH_USER_DOMAINS,\n  GET_USER_DOMAINS_BY_ID_SUCCESS,\n  CLEAR_USER_DOMAINS_BY_ID,\n  USER_DOMAINS_ACCESS_SUCCESS\n} from \"../constants\";\n\nconst initialState = {\n  loading: false,\n  error: null,\n  users: [],\n  creatingUser: false,\n  usersDomain: [],\n  fetchUserDomains: true,\n  userDomainsById: null,\n};\n\nconst userReducer = (state = initialState, action = {}) => {\n  const { type, payload } = action;\n  switch (type) {\n    case FETCH_USERS:\n      return {\n        ...state,\n        loading: true,\n      };\n\n    case USERS_SUCCESS:\n      return {\n        ...state,\n        loading: false,\n        creatingUser: false,\n        users: payload,\n      };\n\n    case USERS_FAIL:\n    case USER_FAIL:\n      return {\n        ...state,\n        loading: false,\n        creatingUser: false,\n        error: payload,\n      };\n\n    case CREATING_USER:\n      return {\n        ...state,\n        creatingUser: true,\n      };\n\n    case CREATE_USER:\n      return {\n        ...state,\n        creatingUser: false,\n      };\n      \n    case GET_USERS_DOMAIN_SUCCESS:\n    case USER_DOMAINS_ACCESS_SUCCESS:\n      return {\n        ...state,\n        usersDomain: payload,\n      };\n\n    case FETCH_USER_DOMAINS:\n      return {\n        ...state,\n        fetchUserDomains: true,\n      };\n      \n    case GET_USER_DOMAINS_BY_ID_SUCCESS:\n      return {\n        ...state,\n        userDomainsById: payload,\n        fetchUserDomains: false,\n      };\n\n    case CLEAR_USER_DOMAINS_BY_ID:\n      return {\n        ...state,\n        userDomainsById: null,\n        fetchUserDomains: false\n      }\n\n    default:\n      return state;\n  }\n};\n\nexport default userReducer;\n","import {\n  SAVING_EVENT,\n  FETCH_EVENTS,\n  EVENTS_SUCCESS,\n  EVENT_SUCCESS,\n  EVENTS_FAIL,\n  EVENT_FAIL,\n  DELETING_EVENT,\n  UPLOAD_IMAGE_SUCCESS,\n} from \"../constants\";\n\nconst initialState = {\n  loading: false,\n  error: null,\n  savingEvent: false,\n  all: [],\n  event: [],\n  events: [],\n  imgURI: \"\",\n  imageLoading:false,\n  deletingEvent: false,\n};\n\nconst eventReducer = (state = initialState, action) => {\n  const { type, payload } = action;\n\n  switch (type) {\n    case DELETING_EVENT:\n      return {\n        ...state,\n        loading: true,\n        deletingEvent: true,\n      };\n\n    case FETCH_EVENTS:\n      return {\n        ...state,\n        loading: true,\n      };\n\n    case SAVING_EVENT:\n      return {\n        ...state,\n        imageLoading:true,\n        savingEvent: true,\n        loading: true,\n      };\n\n    case EVENTS_SUCCESS:\n      return {\n        ...state,\n        loading: false,\n        savingEvent: false,\n        imageLoading:false,\n        all: payload,\n        events: payload,\n        deletingEvent: false,\n      };\n\n    case UPLOAD_IMAGE_SUCCESS:\n      return {\n        ...state,\n        imageLoading:false,\n        savingEvent: false,\n        loading: false,\n        imgURI: payload\n      };\n\n    case EVENT_SUCCESS:\n      return {\n        ...state,\n        loading: false,\n        event:payload,\n        savingEvent: false,\n        deletingEvent: false,\n      };\n\n    case EVENTS_FAIL:\n      return {\n        ...state,\n        loading: false,\n        savingEvent: false,\n        imageLoading:false,\n        error: payload,\n      };\n\n    case EVENT_FAIL:\n      return {\n        ...state,\n        loading: false,\n        savingEvent: false,\n        error: payload,\n      };\n\n    default:\n      return state;\n  }\n};\n\nexport default eventReducer;\n","import { SHOW_NOTIFICATION_SUCCESS } from \"../constants\";\n\nconst initialState = {\n    notification: {\n\n        message: \"\",\n        description: \"\"\n    }\n}\n\nconst notificationReducer = (state = initialState, action = {}) => {\n    const { payload, type } = action;\n\n    switch(type) {\n        case SHOW_NOTIFICATION_SUCCESS:\n            return {\n                ...state,\n                notification: payload\n            }\n        default:\n            return state\n    }\n\n}\n\nexport default notificationReducer;","import {\n  SAVING_VISITEDUSER,\n  FETCH_VISITEDUSER,\n  VISITEDUSERS_SUCCESS,\n  VISITEDUSER_SUCCESS,\n  VISITEDUSERS_FAIL,\n  VISITEDUSER_FAIL,\n  DELETING_VISITEDUSER,\n  CREATE_VISITEDUSER_SUCCESS,\n  CREATE_VISITEDUSER_FAIL\n} from \"../constants\";\n\nconst initialState = {\n  loading: false,\n  error: null,\n  savingVisitedUser: false,\n  all: [],\n  visitedUser: [],\n  visitedUsers: [],\n  deletingVisitedUser: false,\n};\n\nconst visitedUserReducer = (state = initialState, action) => {\n  const { type, payload } = action;\n\n  switch (type) {\n    case DELETING_VISITEDUSER:\n      return {\n        ...state,\n        deletingVisitedUser: true,\n      };\n\n    case FETCH_VISITEDUSER:\n      return {\n        ...state,\n        loading: true,\n      };\n\n    case SAVING_VISITEDUSER:\n      return {\n        ...state,\n        savingVisitedUser: true,\n        loading: true,\n      };\n\n    case VISITEDUSERS_SUCCESS:\n      return {\n        ...state,\n        loading: false,\n        savingVisitedUser: false,\n        all: payload,\n        visitedUsers: payload,\n        visitedUserEvent: false,\n      };\n\n    case CREATE_VISITEDUSER_SUCCESS:\n      return {\n        ...state,\n        savingVisitedUser: false,\n        all: payload\n      };\n\n    case CREATE_VISITEDUSER_FAIL:\n      return {\n        ...state,\n        savingVisitedUser: false,\n        all: payload\n      };\n\n    case VISITEDUSER_SUCCESS:\n      return {\n        ...state,\n        event: payload,\n        loading: false,\n        savingVisitedUser: false,\n        deletingVisitedUser: false,\n      };\n\n    case VISITEDUSERS_FAIL:\n      return {\n        ...state,\n        loading: false,\n        savingVisitedUser: false,\n        error: payload,\n      };\n\n    case VISITEDUSER_FAIL:\n      return {\n        ...state,\n        loading: false,\n        savingVisitedUser: false,\n        error: payload,\n      };\n\n    default:\n      return state;\n  }\n};\n\nexport default visitedUserReducer;\n","import {\n    FETCH_DASHBOARD_SUCCESS,\n    FETCH_DASHBOARD_FAIL,\n    CHANGE_DASHBOARD_STATE\n} from \"../constants\";\n\nconst initialState = {\n    loading: false,\n    dashboard: null,\n    error:null\n};\n\nconst dashboardReducer = (state = initialState, action) => {\n    const { type, payload } = action;\n\n    switch (type) {\n        case FETCH_DASHBOARD_SUCCESS:\n            return {\n                ...state,\n                dashboard: payload,\n                loading: false\n            };\n        case FETCH_DASHBOARD_FAIL:\n            return {\n                ...state,\n                error: payload,\n                loading: false\n            };\n        case CHANGE_DASHBOARD_STATE:\n            return {\n                ...state,\n                loading: true\n            };\n        default:\n            return state;\n    }\n};\n\nexport default dashboardReducer;\n","import { combineReducers } from \"redux\";\n\nimport authReducer from \"./auth\";\nimport userReducer from \"./user\";\nimport eventReducer from \"./events\";\nimport notificationReducer from \"./notification\";\nimport visitedUserReducer from \"./visitedUser\"\nimport dashboardReducer from \"./dashboard\";\n\nexport default combineReducers({ authReducer, userReducer, eventReducer, notificationReducer,visitedUserReducer,dashboardReducer });","import { createStore, applyMiddleware } from \"redux\";\nimport { composeWithDevTools } from \"redux-devtools-extension\";\nimport thunk from \"redux-thunk\";\nimport reducers from \"./reducers\";\n\nconst initialState = {};\n\nconst middleware = [thunk];\n\nconst store = createStore(\n  reducers,\n  initialState,\n  composeWithDevTools(applyMiddleware(...middleware)) \n);\n\nexport default store;\n","import Pages from \"./pages\";\n\n// REDUX SETUP\nimport { Provider } from \"react-redux\";\nimport store from \"./store\";\n\n// Material\nimport { createTheme, ThemeProvider } from \"@mui/material/styles\";\n\nconst theme = createTheme({\n  palette: {\n    primary: {\n      main: '#3772ff',\n    },\n    secondary: {\n      main: '#edeff2',\n    },\n  },\n});\n\nfunction App() {\n  return (\n    <ThemeProvider theme={theme}>\n      <Provider store={store}>\n        <Pages />\n      </Provider>\n    </ThemeProvider>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n    <App />,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n","import cookie from \"react-cookies\";\nimport Swal from 'sweetalert2'\n\nexport const setToken = (token) => {\n  return cookie.save(\"token\", token, { path: \"/\" });\n};\n\nexport const setUser = (user) => {\n  return cookie.save(\"user\", user, { path: \"/\" });\n};\n\n\nexport const getToken = () => {\n  return cookie.load(\"token\");\n};\n\nexport const getUser = () => {\n  return cookie.load(\"user\");\n};\n\nexport const removeToken = () => {\n    return cookie.remove('token', { path: '/' })\n}\n\nexport const removeUser = () => {\n  return cookie.remove('user', { path: '/' })\n}\n\nexport const toster = (status,message) =>{\n  const Toast = Swal.mixin({\n    toast: true,\n    position: 'top-end',\n    showConfirmButton: false,\n    timer: 3000,\n    timerProgressBar: true,\n    didOpen: (toast) => {\n      toast.addEventListener('mouseenter', Swal.stopTimer)\n      toast.addEventListener('mouseleave', Swal.resumeTimer)\n    }\n  })\n  \n  Toast.fire({\n    icon: status,\n    title: message\n  })\n}","import axios from \"axios\";\n\nimport { getToken } from \"../services\";\n\nconst BASE_URL = process.env.REACT_APP_API;\n\nconst getHeaders = () => {\n  return {\n    \"Authorization\": `Bearer ${getToken()}`,\n  };\n};\n\naxios.interceptors.response.use((response) => {\n  return response;\n}, (error) => {\n  if (error.response && error.response.data) {\n      return Promise.reject(error.response.data);\n  }\n  return Promise.reject(error.message);\n});\n\nconst apiRequest = (method, url, data) => {\n  return axios({\n    headers: getHeaders(),\n    method,\n    url: `${BASE_URL}/api/${url}`,\n    data,\n  });\n};\n\nexport default apiRequest;\n","export const GET = \"GET\";\nexport const POST = \"POST\";\nexport const PATCH = \"PATCH\";\nexport const DELETE = \"DELETE\";\nexport const ADMIN = \"ADMIN\";\nexport const USER = \"USER\";\n\nexport const TOKEN_SUCCESS = \"TOKEN_SUCCESS\";\nexport const TOKEN_FAIL = \"TOKEN_FAIL\";\n\nexport const FETCH_USER = \"FETCH_USER\";\nexport const LOGIN_SUCCESS = \"LOGIN_SUCCESS\";\nexport const LOGIN_FAIL = \"LOGIN_FAIL\";\n\nexport const LOGOUT_SUCCESS = \"LOGOUT_SUCCESS\";\nexport const LOGOUT_FAIL = \"LOGOUT_FAIL\";\n\nexport const FETCH_DOMAINS = \"FETCH_DOMAINS\";\nexport const SAVING_DOMAIN = \"SAVING_DOMAIN\";\nexport const DOMAINS_SUCCESS = \"DOMAINS_SUCCESS\";\nexport const DOMAINS_FAIL = \"DOMAINS_FAIL\";\nexport const DELETING_DOMAIN = \"DELETING_DOMAIN\";\n\nexport const SAVING_EVENT = \"SAVING_EVENT\";\nexport const FETCH_EVENTS = \"FETCH_EVENTS\";\nexport const EVENTS_SUCCESS = \"EVENTS_SUCCESS\";\nexport const EVENT_SUCCESS = \"EVENT_SUCCESS\";\nexport const EVENTS_FAIL = \"EVENTS_FAIL\";\nexport const EVENT_FAIL = \"EVENTS_FAIL\";\nexport const DELETING_EVENT = \"DELETING_EVENT\";\nexport const UPLOAD_IMAGE_SUCCESS = \"UPLOAD_IMAGE_SUCCESS\";\n\nexport const SAVING_KEYWORDS = \"SAVING_KEYWORDS\";\nexport const KEYWORDS_SUCCESS = \"KEYWORDS_SUCCESS\";\nexport const KEYWORDS_FAIL = \"KEYWORDS_FAIL\";\nexport const DELETING_KEYWORDS = \"DELETING_KEYWORDS\";\n\nexport const SYNC_REPORT = \"SYNC_REPORT\";\nexport const GENERATE_REPORT = \"GENERATE_REPORT\";\nexport const FETCH_REPORT = \"FETCH_REPORT\";\nexport const REPORT_SUCCESS = \"REPORT_SUCCESS\";\nexport const REPORT_FAIL = \"REPORT_FAIL\";\nexport const DELETING_REPORT = \"DELETING_REPORT\";\nexport const GENERATE_REPORT_BY_KEYWORD = \"GENERATE_REPORT_BY_KEYWORD\";\n\nexport const FILTERING = \"FILTERING\";\nexport const FILTER_REPORT = \"FILTER_REPORT\";\nexport const CLEAR_FILTER = \"CLEAR_FILTER\";\n\nexport const COUNT_SUCCESS = \"COUNT_SUCCESS\";\nexport const COUNT_FAIL = \"COUNT_FAIL\";\n\nexport const FETCH_LANGUAGES = \"FETCH_LANGUAGES\";\nexport const LANGUAGES_SUCCESS = \"LANGUAGES_SUCCESS\";\nexport const LANGUAGES_FAIL = \"LANGUAGES_FAIL\";\n\nexport const FETCH_LOCATIONS = \"FETCH_LOCATIONS\";\nexport const LOCATIONS_SUCCESS = \"LOCATIONS_SUCCESS\";\nexport const LOCATIONS_FAIL = \"LOCATIONS_FAIL\";\n\nexport const FETCH_USERS = \"FETCH_USERS\";\nexport const USERS_SUCCESS = \"USERS_SUCCESS\";\nexport const USERS_FAIL = \"USERS_FAIL\";\n\nexport const CREATING_USER = \"CREATING_USER\";\nexport const CREATE_USER = \"CREATE_USER\";\nexport const USER_FAIL = \"USER_FAIL\";\n\nexport const CHANGE_PASSWORD_SUCCESS = \"CHANGE_PASSWORD_SUCCESS\";\nexport const CHANGE_PASSWORD_FAIL = \"CHANGE_PASSWORD_FAIL\";\n\nexport const GET_USERS_DOMAIN_SUCCESS = \"GET_USERS_DOMAIN_SUCCESS\";\nexport const GET_USERS_DOMAIN_FAIL = \"GET_USERS_DOMAIN_FAIL\";\n\nexport const FETCH_USER_DOMAINS = \"FETCH_USER_DOMAINS\";\nexport const GET_USER_DOMAINS_BY_ID_SUCCESS = \"GET_USER_DOMAINS_BY_ID_SUCCESS\";\nexport const GET_USER_DOMAINS_BY_ID_FAIL = \"GET_USER_DOMAINS_BY_ID_FAIL\";\nexport const CLEAR_USER_DOMAINS_BY_ID = \"CLEAR_USER_DOMAINS_BY_ID\";\n\nexport const USER_DOMAINS_ACCESS_SUCCESS = \"USER_DOMAINS_ACCESS_SUCCESS\";\nexport const USER_DOMAINS_ACCESS_FAIL = \"USER_DOMAINS_ACCESS_FAIL\";\n\nexport const SHOW_NOTIFICATION_SUCCESS = \"SHOW_NOTIFICATION_SUCCESS\"\nexport const SHOW_NOTIFICATION_FAIL = \"SHOW_NOTIFICATION_FAIL\"\n\n\n// Visited User Constant\nexport const SAVING_VISITEDUSER = \"SAVING_VISITEDUSER\";\nexport const FETCH_VISITEDUSER = \"FETCH_VISITEDUSER\";\nexport const VISITEDUSER_SUCCESS = \"VISITEDUSER_SUCCESS\";\nexport const VISITEDUSERS_SUCCESS = \"VISITEDUSERS_SUCCESS\";\nexport const VISITEDUSER_FAIL = \"VISITEDUSER_FAIL\";\nexport const VISITEDUSERS_FAIL = \"VISITEDUSERS_FAIL\";\nexport const DELETING_VISITEDUSER = \"DELETING_VISITEDUSER\";\n\nexport const CREATE_VISITEDUSER_SUCCESS = \"CREATE_VISITEDUSER_SUCCESS\";\nexport const CREATE_VISITEDUSER_FAIL = \"CREATE_VISITEDUSER_FAIL\";\n\nexport const VISITEDUSER_NAME = \"VISITEDUSER_NAME\";\nexport const VISITEDUSER_EMAIL = \"VISITEDUSER_EMAIL\";\nexport const VISITEDUSER_PHONENO = \"VISITEDUSER_PHONENO\";\nexport const VISITEDUSER_EVENTID = \"VISITEDUSER_EVENTID\";\n\nexport const EDIT_VISITEDUSER_ID = \"EDIT_VISITEDUSER_ID\";\nexport const EDIT_VISITEDUSER_NAME = \"EDIT_VISITEDUSER_NAME\";\nexport const EDIT_VISITEDUSER_EMAIL = \"EDIT_VISITEDUSER_EMAIL\";\nexport const EDIT_VISITEDUSER_PHONENO = \"EDIT_VISITEDUSER_PHONENO\";\nexport const EDIT_VISITEDUSER_EVENTID = \"EDIT_VISITEDUSER_EVENTID\";\n\nexport const EDIT_VISITEDUSER_SUCCESS = \"EDIT_VISITEDUSER_SUCCESS\";\nexport const EDIT_VISITEDUSER_FAIL = \"EDIT_VISITEDUSER_FAIL\";\n\n// dashboard\nexport const FETCH_DASHBOARD_SUCCESS = \"FETCH_DASHBOARD_SUCCESS\";\nexport const FETCH_DASHBOARD_FAIL = \"FETCH_DASHBOARD_FAIL\";\nexport const CHANGE_DASHBOARD_STATE = \"CHANGE_DASHBOARD_STATE\";","import { GET, POST, FETCH_USER, LOGIN_SUCCESS, LOGIN_FAIL, LOGOUT_SUCCESS, LOGOUT_FAIL, COUNT_SUCCESS, COUNT_FAIL, TOKEN_FAIL, TOKEN_SUCCESS } from \"../constants\";\n\nimport apiRequest from \"../requests\";\nimport { setToken, removeToken, setUser, removeUser } from \"../services\";\n\nexport const login = (data) => async (dispatch) => {\n  try {\n    dispatch({ type: FETCH_USER });\n    const res = await apiRequest(POST, \"user/login\", data);\n    const token = res.data.response.token;\n    setToken(token);\n    setUser(res.data.response.result[0]);\n    dispatch({ type: LOGIN_SUCCESS, payload: res.data.response.result });\n  } catch (err) {\n    dispatch({ type: LOGIN_FAIL, payload: err });\n  }\n};\n\nexport const getUser = () => async (dispatch) => {\n  try {\n    dispatch({ type: FETCH_USER });\n    const res = await apiRequest(GET, \"users/getUser\");\n    const user = res.data.user;\n    dispatch({ type: LOGIN_SUCCESS, payload: user });\n  } catch (err) {\n    dispatch({ type: LOGIN_FAIL, payload: err });\n  }\n};\n\nexport const logout = () => async (dispatch) => {\n  try {\n    removeToken();\n    removeUser();\n    dispatch({ type: LOGOUT_SUCCESS, payload: false });\n  } catch (err) {\n    dispatch({ type: LOGOUT_FAIL, payload: err });\n  }\n};\n\nexport const getCounts = () => async (dispatch) => {\n  try {\n    const res = await apiRequest(GET, \"users/getCounts\");\n    dispatch({ type: COUNT_SUCCESS, payload: res.data.counts });\n  } catch (err) {\n    dispatch({ type: COUNT_FAIL, payload: err });\n  }\n};\n\n\nexport const checkToken = () => async (dispatch) => {\n  try {\n    const res = await apiRequest(GET, \"checkToken\");\n    dispatch({ type: TOKEN_SUCCESS, payload: res.data });\n  } catch (err) {\n    dispatch({ type: TOKEN_FAIL, payload: err });\n    logout();\n  }\n};\n"],"sourceRoot":""}