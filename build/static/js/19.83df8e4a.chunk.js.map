{"version":3,"sources":["pages/Register.module.css","Component/Registerform.js","store/actions/user.js","pages/Register.js"],"names":["module","exports","RegisterForm","dispatch","useDispatch","navigate","useNavigate","useState","showPassword","setShowPassword","RegisterSchema","Yup","shape","username","min","max","required","email","password","userType","formik","useFormik","initialValues","validationSchema","onSubmit","data","values","a","apiRequest","POST","type","CREATING_USER","setTimeout","CREATE_USER","USER_FAIL","payload","replace","errors","touched","handleSubmit","isSubmitting","getFieldProps","value","autoComplete","noValidate","Stack","spacing","TextField","fullWidth","label","error","Boolean","helperText","InputProps","endAdornment","InputAdornment","position","IconButton","edge","onClick","prev","VisibilityOff","Visibility","LoadingButton","size","variant","loading","Register","Grid","container","className","classes","loginContainer","item","xs","leftside","src","alt","rightside","signHeading","subheading"],"mappings":"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","file":"static/js/19.83df8e4a.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"loginContainer\":\"Register_loginContainer__eiV7c\",\"leftside\":\"Register_leftside__2pKb9\",\"rightside\":\"Register_rightside__2Lm7a\",\"signHeading\":\"Register_signHeading__2u4uI\",\"subheading\":\"Register_subheading__1NLCF\"};","import * as Yup from 'yup';\nimport { useState } from 'react';\nimport { useFormik, Form, FormikProvider } from 'formik';\nimport { useNavigate } from 'react-router-dom';\nimport { useDispatch } from 'react-redux';\n\n// material\nimport { Stack, TextField, IconButton, InputAdornment } from '@mui/material';\nimport {Visibility, VisibilityOff} from '@mui/icons-material';\nimport { LoadingButton } from '@mui/lab';\n\n// Actions \nimport {createUser} from '../store/actions/user';\n\n// ----------------------------------------------------------------------\n\nexport default function RegisterForm() {\n\n  const dispatch = useDispatch();\n  const navigate = useNavigate();\n  const [showPassword, setShowPassword] = useState(false);\n\n  const RegisterSchema = Yup.object().shape({\n    username: Yup.string().min(2, 'Too Short!').max(50, 'Too Long!').required('Username name required'),\n    email: Yup.string().email('Email must be a valid email address').required('Email is required'),\n    password: Yup.string().required('Password is required'),\n    userType: Yup.string().required('User Role not selected')\n  });\n\n  const formik = useFormik({\n    initialValues: {\n      username: '',\n      email: '',\n      password: '',\n      userType: 1,\n    },\n    validationSchema: RegisterSchema,\n    onSubmit: () => {\n      dispatch(createUser(values));\n      navigate('/login', { replace: true });\n    }\n  });\n\n  const { errors, values, touched, handleSubmit, isSubmitting, getFieldProps } = formik;\n\n  return (\n    <FormikProvider value={formik}>\n      <Form autoComplete=\"off\" noValidate onSubmit={handleSubmit}>\n        <Stack spacing={3}>\n          <TextField\n            fullWidth\n            label=\"Username\"\n            {...getFieldProps('username')}\n            error={Boolean(touched.username && errors.username)}\n            helperText={touched.username && errors.username}\n          />\n\n          <TextField\n            fullWidth\n            autoComplete=\"username\"\n            type=\"email\"\n            label=\"Email address\"\n            {...getFieldProps('email')}\n            error={Boolean(touched.email && errors.email)}\n            helperText={touched.email && errors.email}\n          />\n\n          <TextField\n            fullWidth\n            autoComplete=\"current-password\"\n            type={showPassword ? 'text' : 'password'}\n            label=\"Password\"\n            {...getFieldProps('password')}\n            InputProps={{\n              endAdornment: (\n                <InputAdornment position=\"end\">\n                  <IconButton edge=\"end\" onClick={() => setShowPassword((prev) => !prev)}>\n                    {showPassword ? <VisibilityOff /> : <Visibility />}\n                  </IconButton>\n                </InputAdornment>\n              )\n            }}\n            error={Boolean(touched.password && errors.password)}\n            helperText={touched.password && errors.password}\n          />\n\n          <LoadingButton\n            fullWidth\n            size=\"large\"\n            type=\"submit\"\n            variant=\"contained\"\n            loading={isSubmitting}\n          >\n            Register\n          </LoadingButton>\n        </Stack>\n      </Form>\n    </FormikProvider>\n  );\n}\n","import {\n  GET,\n  POST,\n  FETCH_USERS,\n  USERS_SUCCESS,\n  USERS_FAIL,\n  CREATING_USER,\n  CREATE_USER,\n  USER_FAIL,\n  CHANGE_PASSWORD_SUCCESS,\n  CHANGE_PASSWORD_FAIL\n} from \"../constants\";\n\nimport apiRequest from \"../requests\";\n\nexport const getUsers = (data) => async (dispatch) => {\n  try {\n    dispatch({ type: FETCH_USERS });\n    const res = await apiRequest(GET, \"users\", data);\n    dispatch({ type: USERS_SUCCESS, payload: res.data.users });\n  } catch (err) {\n    dispatch({ type: USERS_FAIL, payload: err });\n  }\n};\n\nexport const createUser = (data) => async (dispatch) => {\n  try {\n    await apiRequest(POST, \"user/create\", data);\n    dispatch({ type: CREATING_USER });\n    setTimeout(() => {\n      dispatch({ type: CREATE_USER });\n    }, 1000)\n  } catch (err) {\n    dispatch({ type: USER_FAIL, payload: err });\n  }\n};\n\nexport const changePassword = (data) => async (dispatch) => {\n  try {\n    await apiRequest(POST, \"users/changePassword\", data);\n    dispatch({ type: CHANGE_PASSWORD_SUCCESS });\n  } catch (err) {\n    dispatch({ type: CHANGE_PASSWORD_FAIL, payload: err });\n  }\n};","import React from \"react\";\nimport Grid from '@mui/material/Grid';\nimport RegisterForm from \"../Component/Registerform\";\nimport classes from \"./Register.module.css\";\n\n\nconst Register = () => {\n  return (\n    <Grid container className={classes.loginContainer}>\n      <Grid item xs={6}>\n        <Grid item xs={6}>\n          <div className={classes.leftside}>\n            <h3>Manage the job more effectively with Minimal</h3>\n            <div>\n              <img src='/assets/illustration_register.png' alt=\"Register\" />  \n            </div>\n          </div>    \n        </Grid>\n        <Grid item xs={6}>\n           \n        </Grid>\n      </Grid>\n      <Grid item xs={6}>\n        <div className={classes.rightside}>\n          <h4 className={classes.signHeading}>Sign in to Minimal</h4>\n          <p className={classes.subheading}>Enter your details below.</p>\n          <RegisterForm  />\n        </div>\n      </Grid>\n    </Grid>\n  );\n};\n\nexport default Register;\n"],"sourceRoot":""}